// Copyright (C) 2016 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
apply plugin: 'com.google.android.exoplayer2'
buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.2'
        classpath 'com.novoda:bintray-release:0.9'
        classpath 'com.google.android.gms:strict-version-matcher-plugin:1.1.0'
        testImplementation 'junit:junit:4.12'
        androidTestImplementation 'com.android.support.test:runner:1.0.2'
        androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    }
    // Workaround for the following test coverage issue. Remove when fixed:
    // https://code.google.com/p/android/issues/detail?id=226070
    configurations.all {
        resolutionStrategy {
            force 'org.jacoco:org.jacoco.report:0.7.4.201502262128'
            force 'org.jacoco:org.jacoco.core:0.7.4.201502262128'
        }
    }
}
android {
    defaultConfig {
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
}
allprojects {
    repositories {
        google()
        jcenter()
    }
    project.ext {
        exoplayerPublishEnabled = false
    }
    if (it.hasProperty('externalBuildDir')) {
        if (!new File(externalBuildDir).isAbsolute()) {
            externalBuildDir = new File(rootDir, externalBuildDir)
        }
        buildDir = "${externalBuildDir}/${project.name}"
    }
    group = 'com.google.android.exoplayer'
    
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }
}

apply from: 'javadoc_combined.gradle'
